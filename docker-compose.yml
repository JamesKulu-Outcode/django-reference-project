version: '3.3'

services:
  web:
    container_name: boilerplate_web
    build: ./app
    command: python manage.py runserver 0.0.0.0:8000
    stdin_open: true
    tty: true
    volumes:
      - ./app:/usr/src/app/
    ports:
      - 8000:8000
    env_file:
      - ./.env
    depends_on:
      - db

  db:
    container_name: boilerplate_db
    image: postgres:13.0-alpine
    volumes:
      - db_data:/var/lib/postgresql/data/
    env_file:
      - ./.env
    
  redis:
    container_name: recon_redis
    image: redis:alpine
    restart: always
    expose:
      - 6379
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    entrypoint: redis-server --appendonly yes --port 6379

  rabbit:
    image: rabbitmq:latest
    ports:
      - 5675:5672
    env_file:
      - ./.env
    volumes:
      - 'rabbit_data:/data'

  worker:
    restart: always
    build: ./app
    command:  celery -A core worker -l info

    volumes:
        - worker_data:/app
    links:
        - rabbit
    depends_on:
        - rabbit
    env_file: ./.env

  celery-beat:
    restart: always
    build: ./app
    command: celery -A core beat -l info
    # command: celery -A hr_utilities beat --loglevel=info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
        - celery_beat_data:/app
    links:
        - rabbit
    depends_on:
        - rabbit
    env_file:
        -  ./.env

volumes:
  db_data:
  redis_data: {}
  rabbit_data:
  worker_data:
  celery_beat_data:
